/**
 * generated by Xtext 2.25.0
 */
package xtext.factoryLang.shortDSL.shortDSL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xtext.factoryLang.shortDSL.shortDSL.DSLProgram;
import xtext.factoryLang.shortDSL.shortDSL.DSLTypeValue;
import xtext.factoryLang.shortDSL.shortDSL.Model;
import xtext.factoryLang.shortDSL.shortDSL.ShortDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.factoryLang.shortDSL.shortDSL.impl.ModelImpl#getDslType <em>Dsl Type</em>}</li>
 *   <li>{@link xtext.factoryLang.shortDSL.shortDSL.impl.ModelImpl#getDslProgram <em>Dsl Program</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getDslType() <em>Dsl Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDslType()
   * @generated
   * @ordered
   */
  protected DSLTypeValue dslType;

  /**
   * The cached value of the '{@link #getDslProgram() <em>Dsl Program</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDslProgram()
   * @generated
   * @ordered
   */
  protected DSLProgram dslProgram;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ShortDSLPackage.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DSLTypeValue getDslType()
  {
    return dslType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDslType(DSLTypeValue newDslType, NotificationChain msgs)
  {
    DSLTypeValue oldDslType = dslType;
    dslType = newDslType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ShortDSLPackage.MODEL__DSL_TYPE, oldDslType, newDslType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDslType(DSLTypeValue newDslType)
  {
    if (newDslType != dslType)
    {
      NotificationChain msgs = null;
      if (dslType != null)
        msgs = ((InternalEObject)dslType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ShortDSLPackage.MODEL__DSL_TYPE, null, msgs);
      if (newDslType != null)
        msgs = ((InternalEObject)newDslType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ShortDSLPackage.MODEL__DSL_TYPE, null, msgs);
      msgs = basicSetDslType(newDslType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShortDSLPackage.MODEL__DSL_TYPE, newDslType, newDslType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DSLProgram getDslProgram()
  {
    return dslProgram;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDslProgram(DSLProgram newDslProgram, NotificationChain msgs)
  {
    DSLProgram oldDslProgram = dslProgram;
    dslProgram = newDslProgram;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ShortDSLPackage.MODEL__DSL_PROGRAM, oldDslProgram, newDslProgram);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDslProgram(DSLProgram newDslProgram)
  {
    if (newDslProgram != dslProgram)
    {
      NotificationChain msgs = null;
      if (dslProgram != null)
        msgs = ((InternalEObject)dslProgram).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ShortDSLPackage.MODEL__DSL_PROGRAM, null, msgs);
      if (newDslProgram != null)
        msgs = ((InternalEObject)newDslProgram).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ShortDSLPackage.MODEL__DSL_PROGRAM, null, msgs);
      msgs = basicSetDslProgram(newDslProgram, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShortDSLPackage.MODEL__DSL_PROGRAM, newDslProgram, newDslProgram));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ShortDSLPackage.MODEL__DSL_TYPE:
        return basicSetDslType(null, msgs);
      case ShortDSLPackage.MODEL__DSL_PROGRAM:
        return basicSetDslProgram(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ShortDSLPackage.MODEL__DSL_TYPE:
        return getDslType();
      case ShortDSLPackage.MODEL__DSL_PROGRAM:
        return getDslProgram();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ShortDSLPackage.MODEL__DSL_TYPE:
        setDslType((DSLTypeValue)newValue);
        return;
      case ShortDSLPackage.MODEL__DSL_PROGRAM:
        setDslProgram((DSLProgram)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ShortDSLPackage.MODEL__DSL_TYPE:
        setDslType((DSLTypeValue)null);
        return;
      case ShortDSLPackage.MODEL__DSL_PROGRAM:
        setDslProgram((DSLProgram)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ShortDSLPackage.MODEL__DSL_TYPE:
        return dslType != null;
      case ShortDSLPackage.MODEL__DSL_PROGRAM:
        return dslProgram != null;
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
