/**
 * generated by Xtext 2.25.0
 */
package xtext.factoryLang.shortDSL.shortDSL.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import xtext.factoryLang.shortDSL.shortDSL.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ShortDSLFactoryImpl extends EFactoryImpl implements ShortDSLFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static ShortDSLFactory init()
  {
    try
    {
      ShortDSLFactory theShortDSLFactory = (ShortDSLFactory)EPackage.Registry.INSTANCE.getEFactory(ShortDSLPackage.eNS_URI);
      if (theShortDSLFactory != null)
      {
        return theShortDSLFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new ShortDSLFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ShortDSLFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case ShortDSLPackage.MODEL: return createModel();
      case ShortDSLPackage.DSL_TYPE: return createDSLType();
      case ShortDSLPackage.CONFIGURATION_SHORT: return createConfiguration_Short();
      case ShortDSLPackage.DEVICE_SHORT: return createDevice_Short();
      case ShortDSLPackage.CRANE_SHORT: return createCrane_Short();
      case ShortDSLPackage.CRANE_POSITION_SHORT: return createCranePosition_Short();
      case ShortDSLPackage.DISK_SHORT: return createDisk_Short();
      case ShortDSLPackage.DISK_ZONE_SHORT: return createDiskZone_Short();
      case ShortDSLPackage.CAMERA_SHORT: return createCamera_Short();
      case ShortDSLPackage.CAMERA_COLOR_SHORT: return createCameraColor_Short();
      case ShortDSLPackage.DEVICE_HANDLING_SHORT: return createDeviceHandling_Short();
      case ShortDSLPackage.DSL_SHORT: return createDSLShort();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DSLType createDSLType()
  {
    DSLTypeImpl dslType = new DSLTypeImpl();
    return dslType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Configuration_Short createConfiguration_Short()
  {
    Configuration_ShortImpl configuration_Short = new Configuration_ShortImpl();
    return configuration_Short;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Device_Short createDevice_Short()
  {
    Device_ShortImpl device_Short = new Device_ShortImpl();
    return device_Short;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Crane_Short createCrane_Short()
  {
    Crane_ShortImpl crane_Short = new Crane_ShortImpl();
    return crane_Short;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CranePosition_Short createCranePosition_Short()
  {
    CranePosition_ShortImpl cranePosition_Short = new CranePosition_ShortImpl();
    return cranePosition_Short;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Disk_Short createDisk_Short()
  {
    Disk_ShortImpl disk_Short = new Disk_ShortImpl();
    return disk_Short;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DiskZone_Short createDiskZone_Short()
  {
    DiskZone_ShortImpl diskZone_Short = new DiskZone_ShortImpl();
    return diskZone_Short;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Camera_Short createCamera_Short()
  {
    Camera_ShortImpl camera_Short = new Camera_ShortImpl();
    return camera_Short;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CameraColor_Short createCameraColor_Short()
  {
    CameraColor_ShortImpl cameraColor_Short = new CameraColor_ShortImpl();
    return cameraColor_Short;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DeviceHandling_Short createDeviceHandling_Short()
  {
    DeviceHandling_ShortImpl deviceHandling_Short = new DeviceHandling_ShortImpl();
    return deviceHandling_Short;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DSLShort createDSLShort()
  {
    DSLShortImpl dslShort = new DSLShortImpl();
    return dslShort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ShortDSLPackage getShortDSLPackage()
  {
    return (ShortDSLPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static ShortDSLPackage getPackage()
  {
    return ShortDSLPackage.eINSTANCE;
  }

} //ShortDSLFactoryImpl
