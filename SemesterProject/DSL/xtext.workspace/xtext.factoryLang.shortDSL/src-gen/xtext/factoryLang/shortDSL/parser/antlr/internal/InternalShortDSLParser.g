/*
 * generated by Xtext 2.25.0
 */
parser grammar InternalShortDSLParser;

options {
	tokenVocab=InternalShortDSLLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package xtext.factoryLang.shortDSL.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import xtext.factoryLang.shortDSL.services.ShortDSLGrammarAccess;

}

@members {

 	private ShortDSLGrammarAccess grammarAccess;

    public InternalShortDSLParser(TokenStream input, ShortDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected ShortDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Use
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getUseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getDslTypeDSLTypeValueParserRuleCall_1_0());
				}
				lv_dslType_1_0=ruleDSLTypeValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"dslType",
						lv_dslType_1_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DSLTypeValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=Dsl
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getDslKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getDslProgramDSLProgramParserRuleCall_3_0());
				}
				lv_dslProgram_3_0=ruleDSLProgram
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"dslProgram",
						lv_dslProgram_3_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DSLProgram");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDSLProgram
entryRuleDSLProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLProgramRule()); }
	iv_ruleDSLProgram=ruleDSLProgram
	{ $current=$iv_ruleDSLProgram.current; }
	EOF;

// Rule DSLProgram
ruleDSLProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDSLProgramAccess().getDSLLongParserRuleCall_0());
		}
		this_DSLLong_0=ruleDSLLong
		{
			$current = $this_DSLLong_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDSLProgramAccess().getDSLShortParserRuleCall_1());
		}
		this_DSLShort_1=ruleDSLShort
		{
			$current = $this_DSLShort_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDSLLong
entryRuleDSLLong returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLLongRule()); }
	iv_ruleDSLLong=ruleDSLLong
	{ $current=$iv_ruleDSLLong.current; }
	EOF;

// Rule DSLLong
ruleDSLLong returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDSLLongAccess().getDSLLongAction_0(),
					$current);
			}
		)
		otherlv_1=Test
		{
			newLeafNode(otherlv_1, grammarAccess.getDSLLongAccess().getTestKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDSLLongAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDSLLongRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDSLShort
entryRuleDSLShort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLShortRule()); }
	iv_ruleDSLShort=ruleDSLShort
	{ $current=$iv_ruleDSLShort.current; }
	EOF;

// Rule DSLShort
ruleDSLShort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDSLShortAccess().getDSLShortAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDSLShortAccess().getConfigurationConfigurationSParserRuleCall_1_0());
				}
				lv_configuration_1_0=ruleConfigurationS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDSLShortRule());
					}
					set(
						$current,
						"configuration",
						lv_configuration_1_0,
						"xtext.factoryLang.shortDSL.ShortDSL.ConfigurationS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDSLShortAccess().getDiskHandlingsDiskHandlingSParserRuleCall_2_0());
				}
				lv_diskHandlings_2_0=ruleDiskHandlingS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDSLShortRule());
					}
					add(
						$current,
						"diskHandlings",
						lv_diskHandlings_2_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DiskHandlingS");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleConfigurationS
entryRuleConfigurationS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationSRule()); }
	iv_ruleConfigurationS=ruleConfigurationS
	{ $current=$iv_ruleConfigurationS.current; }
	EOF;

// Rule ConfigurationS
ruleConfigurationS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Devices
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigurationSAccess().getDevicesKeyword_0());
		}
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigurationSAccess().getLeftCurlyBracketKeyword_1());
		}
		this_BEGIN_2=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_2, grammarAccess.getConfigurationSAccess().getBEGINTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigurationSAccess().getDevicesDeviceSParserRuleCall_3_0());
				}
				lv_devices_3_0=ruleDeviceS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigurationSRule());
					}
					add(
						$current,
						"devices",
						lv_devices_3_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DeviceS");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getConfigurationSAccess().getENDTerminalRuleCall_4());
		}
		otherlv_5=RightCurlyBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getConfigurationSAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDeviceS
entryRuleDeviceS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceSRule()); }
	iv_ruleDeviceS=ruleDeviceS
	{ $current=$iv_ruleDeviceS.current; }
	EOF;

// Rule DeviceS
ruleDeviceS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeviceSAccess().getCraneSParserRuleCall_0());
		}
		this_CraneS_0=ruleCraneS
		{
			$current = $this_CraneS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeviceSAccess().getDiskSParserRuleCall_1());
		}
		this_DiskS_1=ruleDiskS
		{
			$current = $this_DiskS_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeviceSAccess().getCameraSParserRuleCall_2());
		}
		this_CameraS_2=ruleCameraS
		{
			$current = $this_CameraS_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCraneS
entryRuleCraneS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneSRule()); }
	iv_ruleCraneS=ruleCraneS
	{ $current=$iv_ruleCraneS.current; }
	EOF;

// Rule CraneS
ruleCraneS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCraneSAccess().getCraneAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCraneSAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneSRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCraneSAccess().getLoggingLoggingSParserRuleCall_2_0());
				}
				lv_logging_2_0=ruleLoggingS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCraneSRule());
					}
					set(
						$current,
						"logging",
						lv_logging_2_0,
						"xtext.factoryLang.shortDSL.ShortDSL.LoggingS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=Colon
		{
			newLeafNode(otherlv_3, grammarAccess.getCraneSAccess().getColonKeyword_3());
		}
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getCraneSAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCraneSAccess().getTargetsCraneZoneSParserRuleCall_5_0());
				}
				lv_targets_5_0=ruleCraneZoneS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCraneSRule());
					}
					add(
						$current,
						"targets",
						lv_targets_5_0,
						"xtext.factoryLang.shortDSL.ShortDSL.CraneZoneS");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getCraneSAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleCraneZoneS
entryRuleCraneZoneS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneZoneSRule()); }
	iv_ruleCraneZoneS=ruleCraneZoneS
	{ $current=$iv_ruleCraneZoneS.current; }
	EOF;

// Rule CraneZoneS
ruleCraneZoneS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCraneZoneSAccess().getCraneZoneAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCraneZoneSAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneZoneSRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=Colon
		{
			newLeafNode(otherlv_2, grammarAccess.getCraneZoneSAccess().getColonKeyword_2());
		}
		(
			(
				lv_zoneValue_3_0=RULE_INT
				{
					newLeafNode(lv_zoneValue_3_0, grammarAccess.getCraneZoneSAccess().getZoneValueINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCraneZoneSRule());
					}
					setWithLastConsumed(
						$current,
						"zoneValue",
						lv_zoneValue_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_4=Comma
			{
				newLeafNode(otherlv_4, grammarAccess.getCraneZoneSAccess().getCommaKeyword_4());
			}
		)?
	)
;

// Entry rule entryRuleDiskS
entryRuleDiskS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskSRule()); }
	iv_ruleDiskS=ruleDiskS
	{ $current=$iv_ruleDiskS.current; }
	EOF;

// Rule DiskS
ruleDiskS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDiskSAccess().getDiskAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDiskSAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskSRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getDiskSAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_nSlots_3_0=RULE_INT
				{
					newLeafNode(lv_nSlots_3_0, grammarAccess.getDiskSAccess().getNSlotsINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskSRule());
					}
					setWithLastConsumed(
						$current,
						"nSlots",
						lv_nSlots_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4=RightParenthesis
		{
			newLeafNode(otherlv_4, grammarAccess.getDiskSAccess().getRightParenthesisKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDiskSAccess().getLoggingLoggingSParserRuleCall_5_0());
				}
				lv_logging_5_0=ruleLoggingS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiskSRule());
					}
					set(
						$current,
						"logging",
						lv_logging_5_0,
						"xtext.factoryLang.shortDSL.ShortDSL.LoggingS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6=Colon
		{
			newLeafNode(otherlv_6, grammarAccess.getDiskSAccess().getColonKeyword_6());
		}
		this_BEGIN_7=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_7, grammarAccess.getDiskSAccess().getBEGINTerminalRuleCall_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDiskSAccess().getTargetsDiskZoneSParserRuleCall_8_0());
				}
				lv_targets_8_0=ruleDiskZoneS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiskSRule());
					}
					add(
						$current,
						"targets",
						lv_targets_8_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DiskZoneS");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_9=RULE_END
		{
			newLeafNode(this_END_9, grammarAccess.getDiskSAccess().getENDTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleDiskZoneS
entryRuleDiskZoneS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskZoneSRule()); }
	iv_ruleDiskZoneS=ruleDiskZoneS
	{ $current=$iv_ruleDiskZoneS.current; }
	EOF;

// Rule DiskZoneS
ruleDiskZoneS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDiskZoneSAccess().getDiskZoneAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDiskZoneSAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskZoneSRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=Colon
		{
			newLeafNode(otherlv_2, grammarAccess.getDiskZoneSAccess().getColonKeyword_2());
		}
		(
			(
				lv_slot_3_0=RULE_INT
				{
					newLeafNode(lv_slot_3_0, grammarAccess.getDiskZoneSAccess().getSlotINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskZoneSRule());
					}
					setWithLastConsumed(
						$current,
						"slot",
						lv_slot_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_4=Comma
			{
				newLeafNode(otherlv_4, grammarAccess.getDiskZoneSAccess().getCommaKeyword_4());
			}
		)?
	)
;

// Entry rule entryRuleCameraS
entryRuleCameraS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraSRule()); }
	iv_ruleCameraS=ruleCameraS
	{ $current=$iv_ruleCameraS.current; }
	EOF;

// Rule CameraS
ruleCameraS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCameraSAccess().getCameraAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCameraSAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCameraSRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCameraSAccess().getLoggingLoggingSParserRuleCall_2_0());
				}
				lv_logging_2_0=ruleLoggingS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCameraSRule());
					}
					set(
						$current,
						"logging",
						lv_logging_2_0,
						"xtext.factoryLang.shortDSL.ShortDSL.LoggingS");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=Colon
		{
			newLeafNode(otherlv_3, grammarAccess.getCameraSAccess().getColonKeyword_3());
		}
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getCameraSAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCameraSAccess().getTargetsCameraColorSParserRuleCall_5_0());
				}
				lv_targets_5_0=ruleCameraColorS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCameraSRule());
					}
					add(
						$current,
						"targets",
						lv_targets_5_0,
						"xtext.factoryLang.shortDSL.ShortDSL.CameraColorS");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getCameraSAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleCameraColorS
entryRuleCameraColorS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraColorSRule()); }
	iv_ruleCameraColorS=ruleCameraColorS
	{ $current=$iv_ruleCameraColorS.current; }
	EOF;

// Rule CameraColorS
ruleCameraColorS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCameraColorSAccess().getCameraColorAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCameraColorSAccess().getColorCOLOR_SEnumRuleCall_1_0());
				}
				lv_color_1_0=ruleCOLOR_S
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCameraColorSRule());
					}
					set(
						$current,
						"color",
						lv_color_1_0,
						"xtext.factoryLang.shortDSL.ShortDSL.COLOR_S");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=Comma
			{
				newLeafNode(otherlv_2, grammarAccess.getCameraColorSAccess().getCommaKeyword_2());
			}
		)?
	)
;

// Entry rule entryRuleLoggingS
entryRuleLoggingS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoggingSRule()); }
	iv_ruleLoggingS=ruleLoggingS
	{ $current=$iv_ruleLoggingS.current; }
	EOF;

// Rule LoggingS
ruleLoggingS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLoggingSAccess().getLoggingAction_0(),
					$current);
			}
		)
		otherlv_1=Logging
		{
			newLeafNode(otherlv_1, grammarAccess.getLoggingSAccess().getLoggingKeyword_1());
		}
	)
;

// Entry rule entryRuleDiskHandlingS
entryRuleDiskHandlingS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskHandlingSRule()); }
	iv_ruleDiskHandlingS=ruleDiskHandlingS
	{ $current=$iv_ruleDiskHandlingS.current; }
	EOF;

// Rule DiskHandlingS
ruleDiskHandlingS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Handle
		{
			newLeafNode(otherlv_0, grammarAccess.getDiskHandlingSAccess().getHandleKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiskHandlingSRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDiskHandlingSAccess().getDiskDiskCrossReference_1_0());
				}
			)
		)
		otherlv_2=LeftCurlyBracket
		{
			newLeafNode(otherlv_2, grammarAccess.getDiskHandlingSAccess().getLeftCurlyBracketKeyword_2());
		}
		this_BEGIN_3=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_3, grammarAccess.getDiskHandlingSAccess().getBEGINTerminalRuleCall_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDiskHandlingSAccess().getStatementsStatementSParserRuleCall_4_0());
				}
				lv_statements_4_0=ruleStatementS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiskHandlingSRule());
					}
					add(
						$current,
						"statements",
						lv_statements_4_0,
						"xtext.factoryLang.shortDSL.ShortDSL.StatementS");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_5=RULE_END
		{
			newLeafNode(this_END_5, grammarAccess.getDiskHandlingSAccess().getENDTerminalRuleCall_5());
		}
		otherlv_6=RightCurlyBracket
		{
			newLeafNode(otherlv_6, grammarAccess.getDiskHandlingSAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleStatementS
entryRuleStatementS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementSRule()); }
	iv_ruleStatementS=ruleStatementS
	{ $current=$iv_ruleStatementS.current; }
	EOF;

// Rule StatementS
ruleStatementS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementSAccess().getLoopSParserRuleCall_0());
		}
		this_LoopS_0=ruleLoopS
		{
			$current = $this_LoopS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementSAccess().getMoveSParserRuleCall_1());
		}
		this_MoveS_1=ruleMoveS
		{
			$current = $this_MoveS_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementSAccess().getCraneActionSParserRuleCall_2());
		}
		this_CraneActionS_2=ruleCraneActionS
		{
			$current = $this_CraneActionS_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementSAccess().getConditionSParserRuleCall_3());
		}
		this_ConditionS_3=ruleConditionS
		{
			$current = $this_ConditionS_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementSAccess().getMarkSParserRuleCall_4());
		}
		this_MarkS_4=ruleMarkS
		{
			$current = $this_MarkS_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLoopS
entryRuleLoopS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopSRule()); }
	iv_ruleLoopS=ruleLoopS
	{ $current=$iv_ruleLoopS.current; }
	EOF;

// Rule LoopS
ruleLoopS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLoopSAccess().getLoopVariableSParserRuleCall_0());
		}
		this_LoopVariableS_0=ruleLoopVariableS
		{
			$current = $this_LoopVariableS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoopSAccess().getLoopSlotSParserRuleCall_1());
		}
		this_LoopSlotS_1=ruleLoopSlotS
		{
			$current = $this_LoopSlotS_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLoopVariableS
entryRuleLoopVariableS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopVariableSRule()); }
	iv_ruleLoopVariableS=ruleLoopVariableS
	{ $current=$iv_ruleLoopVariableS.current; }
	EOF;

// Rule LoopVariableS
ruleLoopVariableS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLoopVariableSAccess().getLoopVariableAction_0(),
					$current);
			}
		)
		otherlv_1=Foreach
		{
			newLeafNode(otherlv_1, grammarAccess.getLoopVariableSAccess().getForeachKeyword_1());
		}
		otherlv_2=Var
		{
			newLeafNode(otherlv_2, grammarAccess.getLoopVariableSAccess().getVarKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopVariableSAccess().getOrdinaryVariableOrdinaryVariableSParserRuleCall_3_0());
				}
				lv_ordinaryVariable_3_0=ruleOrdinaryVariableS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopVariableSRule());
					}
					set(
						$current,
						"ordinaryVariable",
						lv_ordinaryVariable_3_0,
						"xtext.factoryLang.shortDSL.ShortDSL.OrdinaryVariableS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopVariableSAccess().getComparisonOperatorCOMPARISON_OPERATOR_SEnumRuleCall_4_0());
				}
				lv_comparisonOperator_4_0=ruleCOMPARISON_OPERATOR_S
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopVariableSRule());
					}
					set(
						$current,
						"comparisonOperator",
						lv_comparisonOperator_4_0,
						"xtext.factoryLang.shortDSL.ShortDSL.COMPARISON_OPERATOR_S");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopVariableSAccess().getSlotStateDiskSlotStateValueSParserRuleCall_5_0());
				}
				lv_slotState_5_0=ruleDiskSlotStateValueS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopVariableSRule());
					}
					set(
						$current,
						"slotState",
						lv_slotState_5_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DiskSlotStateValueS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=Colon
		{
			newLeafNode(otherlv_6, grammarAccess.getLoopVariableSAccess().getColonKeyword_6());
		}
		this_BEGIN_7=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_7, grammarAccess.getLoopVariableSAccess().getBEGINTerminalRuleCall_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopVariableSAccess().getStatementsStatementSParserRuleCall_8_0());
				}
				lv_statements_8_0=ruleStatementS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopVariableSRule());
					}
					add(
						$current,
						"statements",
						lv_statements_8_0,
						"xtext.factoryLang.shortDSL.ShortDSL.StatementS");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_9=RULE_END
		{
			newLeafNode(this_END_9, grammarAccess.getLoopVariableSAccess().getENDTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleLoopSlotS
entryRuleLoopSlotS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopSlotSRule()); }
	iv_ruleLoopSlotS=ruleLoopSlotS
	{ $current=$iv_ruleLoopSlotS.current; }
	EOF;

// Rule LoopSlotS
ruleLoopSlotS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLoopSlotSAccess().getLoopSlotAction_0(),
					$current);
			}
		)
		otherlv_1=Foreach
		{
			newLeafNode(otherlv_1, grammarAccess.getLoopSlotSAccess().getForeachKeyword_1());
		}
		otherlv_2=Slot
		{
			newLeafNode(otherlv_2, grammarAccess.getLoopSlotSAccess().getSlotKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopSlotSAccess().getSlotVariableSlotVariableSParserRuleCall_3_0());
				}
				lv_slotVariable_3_0=ruleSlotVariableS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopSlotSRule());
					}
					set(
						$current,
						"slotVariable",
						lv_slotVariable_3_0,
						"xtext.factoryLang.shortDSL.ShortDSL.SlotVariableS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopSlotSAccess().getComparisonOperatorCOMPARISON_OPERATOR_SEnumRuleCall_4_0());
				}
				lv_comparisonOperator_4_0=ruleCOMPARISON_OPERATOR_S
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopSlotSRule());
					}
					set(
						$current,
						"comparisonOperator",
						lv_comparisonOperator_4_0,
						"xtext.factoryLang.shortDSL.ShortDSL.COMPARISON_OPERATOR_S");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopSlotSAccess().getSlotStateDiskSlotStateValueSParserRuleCall_5_0());
				}
				lv_slotState_5_0=ruleDiskSlotStateValueS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopSlotSRule());
					}
					set(
						$current,
						"slotState",
						lv_slotState_5_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DiskSlotStateValueS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=Colon
		{
			newLeafNode(otherlv_6, grammarAccess.getLoopSlotSAccess().getColonKeyword_6());
		}
		this_BEGIN_7=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_7, grammarAccess.getLoopSlotSAccess().getBEGINTerminalRuleCall_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopSlotSAccess().getStatementsStatementSParserRuleCall_8_0());
				}
				lv_statements_8_0=ruleStatementS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopSlotSRule());
					}
					add(
						$current,
						"statements",
						lv_statements_8_0,
						"xtext.factoryLang.shortDSL.ShortDSL.StatementS");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_9=RULE_END
		{
			newLeafNode(this_END_9, grammarAccess.getLoopSlotSAccess().getENDTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleMoveS
entryRuleMoveS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoveSRule()); }
	iv_ruleMoveS=ruleMoveS
	{ $current=$iv_ruleMoveS.current; }
	EOF;

// Rule MoveS
ruleMoveS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMoveSAccess().getMoveDiskSParserRuleCall_0());
		}
		this_MoveDiskS_0=ruleMoveDiskS
		{
			$current = $this_MoveDiskS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMoveSAccess().getMoveAnySlotSParserRuleCall_1());
		}
		this_MoveAnySlotS_1=ruleMoveAnySlotS
		{
			$current = $this_MoveAnySlotS_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMoveSAccess().getMoveCraneSParserRuleCall_2());
		}
		this_MoveCraneS_2=ruleMoveCraneS
		{
			$current = $this_MoveCraneS_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMoveDiskS
entryRuleMoveDiskS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoveDiskSRule()); }
	iv_ruleMoveDiskS=ruleMoveDiskS
	{ $current=$iv_ruleMoveDiskS.current; }
	EOF;

// Rule MoveDiskS
ruleMoveDiskS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMoveDiskSAccess().getMoveDiskAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveDiskSRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getMoveDiskSAccess().getSlotSlotVariableCrossReference_1_0());
				}
			)
		)
		(
			otherlv_2=HyphenMinusGreaterThanSign
			{
				newLeafNode(otherlv_2, grammarAccess.getMoveDiskSAccess().getHyphenMinusGreaterThanSignKeyword_2_0());
			}
			    |
			otherlv_3=HyphenMinusHyphenMinusGreaterThanSign
			{
				newLeafNode(otherlv_3, grammarAccess.getMoveDiskSAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_2_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveDiskSRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getMoveDiskSAccess().getZoneDiskZoneCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleMoveAnySlotS
entryRuleMoveAnySlotS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoveAnySlotSRule()); }
	iv_ruleMoveAnySlotS=ruleMoveAnySlotS
	{ $current=$iv_ruleMoveAnySlotS.current; }
	EOF;

// Rule MoveAnySlotS
ruleMoveAnySlotS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMoveAnySlotSAccess().getMoveAnySlotAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMoveAnySlotSAccess().getStateDiskSlotStateValueSParserRuleCall_1_0());
				}
				lv_state_1_0=ruleDiskSlotStateValueS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMoveAnySlotSRule());
					}
					set(
						$current,
						"state",
						lv_state_1_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DiskSlotStateValueS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMoveAnySlotSAccess().getAnySlotSlotVariableSParserRuleCall_2_0());
				}
				lv_anySlot_2_0=ruleSlotVariableS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMoveAnySlotSRule());
					}
					set(
						$current,
						"anySlot",
						lv_anySlot_2_0,
						"xtext.factoryLang.shortDSL.ShortDSL.SlotVariableS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=HyphenMinusGreaterThanSign
			{
				newLeafNode(otherlv_3, grammarAccess.getMoveAnySlotSAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
			}
			    |
			otherlv_4=HyphenMinusHyphenMinusGreaterThanSign
			{
				newLeafNode(otherlv_4, grammarAccess.getMoveAnySlotSAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_3_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveAnySlotSRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getMoveAnySlotSAccess().getZoneDiskZoneCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleMoveCraneS
entryRuleMoveCraneS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoveCraneSRule()); }
	iv_ruleMoveCraneS=ruleMoveCraneS
	{ $current=$iv_ruleMoveCraneS.current; }
	EOF;

// Rule MoveCraneS
ruleMoveCraneS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMoveCraneSAccess().getMoveCraneAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveCraneSRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getMoveCraneSAccess().getCraneCraneCrossReference_1_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMoveCraneSAccess().getActionCraneActionSParserRuleCall_2_0());
				}
				lv_action_2_0=ruleCraneActionS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMoveCraneSRule());
					}
					set(
						$current,
						"action",
						lv_action_2_0,
						"xtext.factoryLang.shortDSL.ShortDSL.CraneActionS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=HyphenMinusGreaterThanSign
			{
				newLeafNode(otherlv_3, grammarAccess.getMoveCraneSAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
			}
			    |
			otherlv_4=HyphenMinusHyphenMinusGreaterThanSign
			{
				newLeafNode(otherlv_4, grammarAccess.getMoveCraneSAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_3_1());
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveCraneSRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getMoveCraneSAccess().getZoneCraneZoneCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleCraneActionS
entryRuleCraneActionS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCraneActionSRule()); }
	iv_ruleCraneActionS=ruleCraneActionS
	{ $current=$iv_ruleCraneActionS.current; }
	EOF;

// Rule CraneActionS
ruleCraneActionS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCraneActionSAccess().getCraneActionAction_0(),
					$current);
			}
		)
		(
			otherlv_1=Pickup
			{
				newLeafNode(otherlv_1, grammarAccess.getCraneActionSAccess().getPickupKeyword_1_0());
			}
			    |
			otherlv_2=Drop
			{
				newLeafNode(otherlv_2, grammarAccess.getCraneActionSAccess().getDropKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleConditionS
entryRuleConditionS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionSRule()); }
	iv_ruleConditionS=ruleConditionS
	{ $current=$iv_ruleConditionS.current; }
	EOF;

// Rule ConditionS
ruleConditionS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionSAccess().getConditionVariableSParserRuleCall_0());
		}
		this_ConditionVariableS_0=ruleConditionVariableS
		{
			$current = $this_ConditionVariableS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionSAccess().getConditionDeviceSParserRuleCall_1());
		}
		this_ConditionDeviceS_1=ruleConditionDeviceS
		{
			$current = $this_ConditionDeviceS_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionSAccess().getConditionSlotSParserRuleCall_2());
		}
		this_ConditionSlotS_2=ruleConditionSlotS
		{
			$current = $this_ConditionSlotS_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConditionVariableS
entryRuleConditionVariableS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionVariableSRule()); }
	iv_ruleConditionVariableS=ruleConditionVariableS
	{ $current=$iv_ruleConditionVariableS.current; }
	EOF;

// Rule ConditionVariableS
ruleConditionVariableS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConditionVariableSAccess().getConditionVariableAction_0(),
					$current);
			}
		)
		otherlv_1=If
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionVariableSAccess().getIfKeyword_1());
		}
		otherlv_2=Var
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionVariableSAccess().getVarKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionVariableSRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getConditionVariableSAccess().getVariableOrdinaryVariableCrossReference_3_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionVariableSAccess().getComparisonOperatorCOMPARISON_OPERATOR_SEnumRuleCall_4_0());
				}
				lv_comparisonOperator_4_0=ruleCOMPARISON_OPERATOR_S
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionVariableSRule());
					}
					set(
						$current,
						"comparisonOperator",
						lv_comparisonOperator_4_0,
						"xtext.factoryLang.shortDSL.ShortDSL.COMPARISON_OPERATOR_S");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionVariableSAccess().getVariableValueVariableValueSParserRuleCall_5_0());
				}
				lv_variableValue_5_0=ruleVariableValueS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionVariableSRule());
					}
					set(
						$current,
						"variableValue",
						lv_variableValue_5_0,
						"xtext.factoryLang.shortDSL.ShortDSL.VariableValueS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=Colon
		{
			newLeafNode(otherlv_6, grammarAccess.getConditionVariableSAccess().getColonKeyword_6());
		}
		this_BEGIN_7=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_7, grammarAccess.getConditionVariableSAccess().getBEGINTerminalRuleCall_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionVariableSAccess().getStatementsStatementSParserRuleCall_8_0());
				}
				lv_statements_8_0=ruleStatementS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionVariableSRule());
					}
					add(
						$current,
						"statements",
						lv_statements_8_0,
						"xtext.factoryLang.shortDSL.ShortDSL.StatementS");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_9=RULE_END
		{
			newLeafNode(this_END_9, grammarAccess.getConditionVariableSAccess().getENDTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleConditionSlotS
entryRuleConditionSlotS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionSlotSRule()); }
	iv_ruleConditionSlotS=ruleConditionSlotS
	{ $current=$iv_ruleConditionSlotS.current; }
	EOF;

// Rule ConditionSlotS
ruleConditionSlotS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConditionSlotSAccess().getConditionSlotAction_0(),
					$current);
			}
		)
		otherlv_1=If
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionSlotSAccess().getIfKeyword_1());
		}
		otherlv_2=Slot
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionSlotSAccess().getSlotKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionSlotSRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getConditionSlotSAccess().getVariableSlotVariableCrossReference_3_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionSlotSAccess().getComparisonOperatorCOMPARISON_OPERATOR_SEnumRuleCall_4_0());
				}
				lv_comparisonOperator_4_0=ruleCOMPARISON_OPERATOR_S
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionSlotSRule());
					}
					set(
						$current,
						"comparisonOperator",
						lv_comparisonOperator_4_0,
						"xtext.factoryLang.shortDSL.ShortDSL.COMPARISON_OPERATOR_S");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionSlotSAccess().getSlotValueValueSlotSParserRuleCall_5_0());
				}
				lv_slotValue_5_0=ruleValueSlotS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionSlotSRule());
					}
					set(
						$current,
						"slotValue",
						lv_slotValue_5_0,
						"xtext.factoryLang.shortDSL.ShortDSL.ValueSlotS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=Colon
		{
			newLeafNode(otherlv_6, grammarAccess.getConditionSlotSAccess().getColonKeyword_6());
		}
		this_BEGIN_7=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_7, grammarAccess.getConditionSlotSAccess().getBEGINTerminalRuleCall_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionSlotSAccess().getStatementsStatementSParserRuleCall_8_0());
				}
				lv_statements_8_0=ruleStatementS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionSlotSRule());
					}
					add(
						$current,
						"statements",
						lv_statements_8_0,
						"xtext.factoryLang.shortDSL.ShortDSL.StatementS");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_9=RULE_END
		{
			newLeafNode(this_END_9, grammarAccess.getConditionSlotSAccess().getENDTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleConditionDeviceS
entryRuleConditionDeviceS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionDeviceSRule()); }
	iv_ruleConditionDeviceS=ruleConditionDeviceS
	{ $current=$iv_ruleConditionDeviceS.current; }
	EOF;

// Rule ConditionDeviceS
ruleConditionDeviceS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConditionDeviceSAccess().getConditionDeviceAction_0(),
					$current);
			}
		)
		otherlv_1=If
		{
			newLeafNode(otherlv_1, grammarAccess.getConditionDeviceSAccess().getIfKeyword_1());
		}
		otherlv_2=Dev
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionDeviceSAccess().getDevKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConditionDeviceSRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getConditionDeviceSAccess().getDeviceDeviceSCrossReference_3_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionDeviceSAccess().getComparisonOperatorCOMPARISON_OPERATOR_SEnumRuleCall_4_0());
				}
				lv_comparisonOperator_4_0=ruleCOMPARISON_OPERATOR_S
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionDeviceSRule());
					}
					set(
						$current,
						"comparisonOperator",
						lv_comparisonOperator_4_0,
						"xtext.factoryLang.shortDSL.ShortDSL.COMPARISON_OPERATOR_S");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionDeviceSAccess().getDeviceValueDeviceValueSParserRuleCall_5_0());
				}
				lv_deviceValue_5_0=ruleDeviceValueS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionDeviceSRule());
					}
					set(
						$current,
						"deviceValue",
						lv_deviceValue_5_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DeviceValueS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=Colon
		{
			newLeafNode(otherlv_6, grammarAccess.getConditionDeviceSAccess().getColonKeyword_6());
		}
		this_BEGIN_7=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_7, grammarAccess.getConditionDeviceSAccess().getBEGINTerminalRuleCall_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionDeviceSAccess().getStatementsStatementSParserRuleCall_8_0());
				}
				lv_statements_8_0=ruleStatementS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionDeviceSRule());
					}
					add(
						$current,
						"statements",
						lv_statements_8_0,
						"xtext.factoryLang.shortDSL.ShortDSL.StatementS");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_9=RULE_END
		{
			newLeafNode(this_END_9, grammarAccess.getConditionDeviceSAccess().getENDTerminalRuleCall_9());
		}
	)
;

// Entry rule entryRuleMarkS
entryRuleMarkS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMarkSRule()); }
	iv_ruleMarkS=ruleMarkS
	{ $current=$iv_ruleMarkS.current; }
	EOF;

// Rule MarkS
ruleMarkS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMarkSAccess().getMarkVariableValueSParserRuleCall_0());
		}
		this_MarkVariableValueS_0=ruleMarkVariableValueS
		{
			$current = $this_MarkVariableValueS_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMarkSAccess().getMarkCameraValueSParserRuleCall_1());
		}
		this_MarkCameraValueS_1=ruleMarkCameraValueS
		{
			$current = $this_MarkCameraValueS_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMarkVariableValueS
entryRuleMarkVariableValueS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMarkVariableValueSRule()); }
	iv_ruleMarkVariableValueS=ruleMarkVariableValueS
	{ $current=$iv_ruleMarkVariableValueS.current; }
	EOF;

// Rule MarkVariableValueS
ruleMarkVariableValueS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMarkVariableValueSAccess().getMarkVariableValueAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMarkVariableValueSRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getMarkVariableValueSAccess().getVariableVariableSCrossReference_1_0());
				}
			)
		)
		otherlv_2=LeftParenthesis
		{
			newLeafNode(otherlv_2, grammarAccess.getMarkVariableValueSAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMarkVariableValueSAccess().getValueValueSlotSParserRuleCall_3_0());
				}
				lv_value_3_0=ruleValueSlotS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMarkVariableValueSRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"xtext.factoryLang.shortDSL.ShortDSL.ValueSlotS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=Comma
			{
				newLeafNode(otherlv_4, grammarAccess.getMarkVariableValueSAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_time_5_0=RULE_INT
					{
						newLeafNode(lv_time_5_0, grammarAccess.getMarkVariableValueSAccess().getTimeINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMarkVariableValueSRule());
						}
						setWithLastConsumed(
							$current,
							"time",
							lv_time_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMarkVariableValueSAccess().getUnitTIME_UNIT_SEnumRuleCall_4_2_0());
					}
					lv_unit_6_0=ruleTIME_UNIT_S
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMarkVariableValueSRule());
						}
						set(
							$current,
							"unit",
							lv_unit_6_0,
							"xtext.factoryLang.shortDSL.ShortDSL.TIME_UNIT_S");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7=RightParenthesis
		{
			newLeafNode(otherlv_7, grammarAccess.getMarkVariableValueSAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleMarkCameraValueS
entryRuleMarkCameraValueS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMarkCameraValueSRule()); }
	iv_ruleMarkCameraValueS=ruleMarkCameraValueS
	{ $current=$iv_ruleMarkCameraValueS.current; }
	EOF;

// Rule MarkCameraValueS
ruleMarkCameraValueS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMarkCameraValueSAccess().getMarkCameraValueAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMarkCameraValueSRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getMarkCameraValueSAccess().getCameraCameraCrossReference_1_0());
				}
			)
		)
		otherlv_2=Scan
		{
			newLeafNode(otherlv_2, grammarAccess.getMarkCameraValueSAccess().getScanKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMarkCameraValueSAccess().getVariableOrdinaryVariableSParserRuleCall_3_0());
				}
				lv_variable_3_0=ruleOrdinaryVariableS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMarkCameraValueSRule());
					}
					set(
						$current,
						"variable",
						lv_variable_3_0,
						"xtext.factoryLang.shortDSL.ShortDSL.OrdinaryVariableS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOrdinaryVariableS
entryRuleOrdinaryVariableS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrdinaryVariableSRule()); }
	iv_ruleOrdinaryVariableS=ruleOrdinaryVariableS
	{ $current=$iv_ruleOrdinaryVariableS.current; }
	EOF;

// Rule OrdinaryVariableS
ruleOrdinaryVariableS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOrdinaryVariableSAccess().getOrdinaryVariableAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOrdinaryVariableSAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOrdinaryVariableSRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSlotVariableS
entryRuleSlotVariableS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSlotVariableSRule()); }
	iv_ruleSlotVariableS=ruleSlotVariableS
	{ $current=$iv_ruleSlotVariableS.current; }
	EOF;

// Rule SlotVariableS
ruleSlotVariableS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSlotVariableSAccess().getSlotVariableAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSlotVariableSAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSlotVariableSRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleVariableValueS
entryRuleVariableValueS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableValueSRule()); }
	iv_ruleVariableValueS=ruleVariableValueS
	{ $current=$iv_ruleVariableValueS.current; }
	EOF;

// Rule VariableValueS
ruleVariableValueS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableValueSAccess().getValueDiskSlotStateValueSParserRuleCall_0_0());
				}
				lv_value_0_0=ruleDiskSlotStateValueS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableValueSRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DiskSlotStateValueS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableValueSAccess().getValueColorValueSParserRuleCall_1_0());
				}
				lv_value_1_0=ruleColorValueS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableValueSRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"xtext.factoryLang.shortDSL.ShortDSL.ColorValueS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableValueSAccess().getValueNumberSParserRuleCall_2_0());
				}
				lv_value_2_0=ruleNumberS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableValueSRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"xtext.factoryLang.shortDSL.ShortDSL.NumberS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableValueSAccess().getValueDiskStateValueSParserRuleCall_3_0());
				}
				lv_value_3_0=ruleDiskStateValueS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableValueSRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DiskStateValueS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableValueSRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getVariableValueSAccess().getRefVariableSCrossReference_4_0());
				}
			)
		)
	)
;

// Entry rule entryRuleDeviceValueS
entryRuleDeviceValueS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceValueSRule()); }
	iv_ruleDeviceValueS=ruleDeviceValueS
	{ $current=$iv_ruleDeviceValueS.current; }
	EOF;

// Rule DeviceValueS
ruleDeviceValueS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceValueSAccess().getValueDiskStateValueSParserRuleCall_0_0());
				}
				lv_value_0_0=ruleDiskStateValueS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceValueSRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DiskStateValueS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceValueSAccess().getValueColorValueSParserRuleCall_1_0());
				}
				lv_value_1_0=ruleColorValueS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceValueSRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"xtext.factoryLang.shortDSL.ShortDSL.ColorValueS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceValueSRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getDeviceValueSAccess().getConfigurationValueConfigurationValueSCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleValueSlotS
entryRuleValueSlotS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueSlotSRule()); }
	iv_ruleValueSlotS=ruleValueSlotS
	{ $current=$iv_ruleValueSlotS.current; }
	EOF;

// Rule ValueSlotS
ruleValueSlotS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getValueSlotSAccess().getValueDiskSlotStateValueSParserRuleCall_0_0());
				}
				lv_value_0_0=ruleDiskSlotStateValueS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueSlotSRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"xtext.factoryLang.shortDSL.ShortDSL.DiskSlotStateValueS");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueSlotSAccess().getValueColorValueSParserRuleCall_1_0());
				}
				lv_value_1_0=ruleColorValueS
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueSlotSRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"xtext.factoryLang.shortDSL.ShortDSL.ColorValueS");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDSLTypeValue
entryRuleDSLTypeValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDSLTypeValueRule()); }
	iv_ruleDSLTypeValue=ruleDSLTypeValue
	{ $current=$iv_ruleDSLTypeValue.current; }
	EOF;

// Rule DSLTypeValue
ruleDSLTypeValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDSLTypeValueAccess().getValueDSL_TYPE_ENUMEnumRuleCall_0());
			}
			lv_value_0_0=ruleDSL_TYPE_ENUM
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDSLTypeValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"xtext.factoryLang.shortDSL.ShortDSL.DSL_TYPE_ENUM");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDiskStateValueS
entryRuleDiskStateValueS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskStateValueSRule()); }
	iv_ruleDiskStateValueS=ruleDiskStateValueS
	{ $current=$iv_ruleDiskStateValueS.current; }
	EOF;

// Rule DiskStateValueS
ruleDiskStateValueS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDiskStateValueSAccess().getValueDISK_STATES_SEnumRuleCall_0());
			}
			lv_value_0_0=ruleDISK_STATES_S
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDiskStateValueSRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"xtext.factoryLang.shortDSL.ShortDSL.DISK_STATES_S");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDiskSlotStateValueS
entryRuleDiskSlotStateValueS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskSlotStateValueSRule()); }
	iv_ruleDiskSlotStateValueS=ruleDiskSlotStateValueS
	{ $current=$iv_ruleDiskSlotStateValueS.current; }
	EOF;

// Rule DiskSlotStateValueS
ruleDiskSlotStateValueS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDiskSlotStateValueSAccess().getValueDISK_SLOT_STATES_SEnumRuleCall_0());
			}
			lv_value_0_0=ruleDISK_SLOT_STATES_S
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDiskSlotStateValueSRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"xtext.factoryLang.shortDSL.ShortDSL.DISK_SLOT_STATES_S");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleColorValueS
entryRuleColorValueS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColorValueSRule()); }
	iv_ruleColorValueS=ruleColorValueS
	{ $current=$iv_ruleColorValueS.current; }
	EOF;

// Rule ColorValueS
ruleColorValueS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getColorValueSAccess().getValueCOLOR_SEnumRuleCall_0());
			}
			lv_value_0_0=ruleCOLOR_S
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getColorValueSRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"xtext.factoryLang.shortDSL.ShortDSL.COLOR_S");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNumberS
entryRuleNumberS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberSRule()); }
	iv_ruleNumberS=ruleNumberS
	{ $current=$iv_ruleNumberS.current; }
	EOF;

// Rule NumberS
ruleNumberS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getNumberSAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNumberSRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Rule DSL_TYPE_ENUM
ruleDSL_TYPE_ENUM returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Long
			{
				$current = grammarAccess.getDSL_TYPE_ENUMAccess().getLONGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDSL_TYPE_ENUMAccess().getLONGEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Short
			{
				$current = grammarAccess.getDSL_TYPE_ENUMAccess().getSHORTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDSL_TYPE_ENUMAccess().getSHORTEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule COMPARISON_OPERATOR_S
ruleCOMPARISON_OPERATOR_S returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=EqualsSign
			{
				$current = grammarAccess.getCOMPARISON_OPERATOR_SAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCOMPARISON_OPERATOR_SAccess().getEQUALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=LessThanSign
			{
				$current = grammarAccess.getCOMPARISON_OPERATOR_SAccess().getLESS_THANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCOMPARISON_OPERATOR_SAccess().getLESS_THANEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=GreaterThanSign
			{
				$current = grammarAccess.getCOMPARISON_OPERATOR_SAccess().getGREATER_THANEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCOMPARISON_OPERATOR_SAccess().getGREATER_THANEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=ExclamationMarkEqualsSign
			{
				$current = grammarAccess.getCOMPARISON_OPERATOR_SAccess().getNOTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getCOMPARISON_OPERATOR_SAccess().getNOTEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule COLOR_S
ruleCOLOR_S returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Red
			{
				$current = grammarAccess.getCOLOR_SAccess().getREDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getCOLOR_SAccess().getREDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Green
			{
				$current = grammarAccess.getCOLOR_SAccess().getGREENEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getCOLOR_SAccess().getGREENEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Blue
			{
				$current = grammarAccess.getCOLOR_SAccess().getBLUEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getCOLOR_SAccess().getBLUEEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule DISK_SLOT_STATES_S
ruleDISK_SLOT_STATES_S returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Free
			{
				$current = grammarAccess.getDISK_SLOT_STATES_SAccess().getFREEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDISK_SLOT_STATES_SAccess().getFREEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=In_progress
			{
				$current = grammarAccess.getDISK_SLOT_STATES_SAccess().getIN_PROGRESSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDISK_SLOT_STATES_SAccess().getIN_PROGRESSEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Complete
			{
				$current = grammarAccess.getDISK_SLOT_STATES_SAccess().getCOMPLETEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDISK_SLOT_STATES_SAccess().getCOMPLETEEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule DISK_STATES_S
ruleDISK_STATES_S returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=Full
			{
				$current = grammarAccess.getDISK_STATES_SAccess().getFULLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDISK_STATES_SAccess().getFULLEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Empty
			{
				$current = grammarAccess.getDISK_STATES_SAccess().getEMPTYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDISK_STATES_SAccess().getEMPTYEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule TIME_UNIT_S
ruleTIME_UNIT_S returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=S
			{
				$current = grammarAccess.getTIME_UNIT_SAccess().getSECONDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTIME_UNIT_SAccess().getSECONDEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=M
			{
				$current = grammarAccess.getTIME_UNIT_SAccess().getMINUTEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTIME_UNIT_SAccess().getMINUTEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=H
			{
				$current = grammarAccess.getTIME_UNIT_SAccess().getHOUREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTIME_UNIT_SAccess().getHOUREnumLiteralDeclaration_2());
			}
		)
	)
;
