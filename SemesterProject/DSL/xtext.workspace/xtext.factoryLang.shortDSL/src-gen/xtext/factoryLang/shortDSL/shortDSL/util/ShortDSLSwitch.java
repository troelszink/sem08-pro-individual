/**
 * generated by Xtext 2.25.0
 */
package xtext.factoryLang.shortDSL.shortDSL.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import xtext.factoryLang.shortDSL.shortDSL.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see xtext.factoryLang.shortDSL.shortDSL.ShortDSLPackage
 * @generated
 */
public class ShortDSLSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static ShortDSLPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ShortDSLSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = ShortDSLPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case ShortDSLPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DSL_LONG:
      {
        DSL_Long dsL_Long = (DSL_Long)theEObject;
        T result = caseDSL_Long(dsL_Long);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DSL_TYPE:
      {
        DSLType dslType = (DSLType)theEObject;
        T result = caseDSLType(dslType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CONFIGURATION_S:
      {
        ConfigurationS configurationS = (ConfigurationS)theEObject;
        T result = caseConfigurationS(configurationS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DEVICE_S:
      {
        DeviceS deviceS = (DeviceS)theEObject;
        T result = caseDeviceS(deviceS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CONFIGURATION_VALUE_S:
      {
        ConfigurationValueS configurationValueS = (ConfigurationValueS)theEObject;
        T result = caseConfigurationValueS(configurationValueS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DISK_HANDLING_S:
      {
        DiskHandlingS diskHandlingS = (DiskHandlingS)theEObject;
        T result = caseDiskHandlingS(diskHandlingS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.STATEMENT_S:
      {
        StatementS statementS = (StatementS)theEObject;
        T result = caseStatementS(statementS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.ACTION_S:
      {
        ActionS actionS = (ActionS)theEObject;
        T result = caseActionS(actionS);
        if (result == null) result = caseStatementS(actionS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CONDITION_S:
      {
        ConditionS conditionS = (ConditionS)theEObject;
        T result = caseConditionS(conditionS);
        if (result == null) result = caseStatementS(conditionS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.MARK_S:
      {
        MarkS markS = (MarkS)theEObject;
        T result = caseMarkS(markS);
        if (result == null) result = caseStatementS(markS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.VARIABLE:
      {
        Variable variable = (Variable)theEObject;
        T result = caseVariable(variable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.VALUE:
      {
        Value value = (Value)theEObject;
        T result = caseValue(value);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DSL_SHORT:
      {
        DSLShort dslShort = (DSLShort)theEObject;
        T result = caseDSLShort(dslShort);
        if (result == null) result = caseDSLType(dslShort);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CRANE:
      {
        Crane crane = (Crane)theEObject;
        T result = caseCrane(crane);
        if (result == null) result = caseDeviceS(crane);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CRANE_ZONE:
      {
        CraneZone craneZone = (CraneZone)theEObject;
        T result = caseCraneZone(craneZone);
        if (result == null) result = caseConfigurationValueS(craneZone);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DISK:
      {
        Disk disk = (Disk)theEObject;
        T result = caseDisk(disk);
        if (result == null) result = caseDeviceS(disk);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DISK_ZONE:
      {
        DiskZone diskZone = (DiskZone)theEObject;
        T result = caseDiskZone(diskZone);
        if (result == null) result = caseConfigurationValueS(diskZone);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CAMERA:
      {
        Camera camera = (Camera)theEObject;
        T result = caseCamera(camera);
        if (result == null) result = caseDeviceS(camera);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CAMERA_COLOR:
      {
        CameraColor cameraColor = (CameraColor)theEObject;
        T result = caseCameraColor(cameraColor);
        if (result == null) result = caseConfigurationValueS(cameraColor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.LOOP:
      {
        Loop loop = (Loop)theEObject;
        T result = caseLoop(loop);
        if (result == null) result = caseStatementS(loop);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.MOVE_DISK:
      {
        MoveDisk moveDisk = (MoveDisk)theEObject;
        T result = caseMoveDisk(moveDisk);
        if (result == null) result = caseStatementS(moveDisk);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.MOVE_CRANE:
      {
        MoveCrane moveCrane = (MoveCrane)theEObject;
        T result = caseMoveCrane(moveCrane);
        if (result == null) result = caseStatementS(moveCrane);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.ACTION:
      {
        Action action = (Action)theEObject;
        T result = caseAction(action);
        if (result == null) result = caseActionS(action);
        if (result == null) result = caseStatementS(action);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CONDITION_VARIABLE:
      {
        ConditionVariable conditionVariable = (ConditionVariable)theEObject;
        T result = caseConditionVariable(conditionVariable);
        if (result == null) result = caseConditionS(conditionVariable);
        if (result == null) result = caseStatementS(conditionVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CONDITION_DEVICE:
      {
        ConditionDevice conditionDevice = (ConditionDevice)theEObject;
        T result = caseConditionDevice(conditionDevice);
        if (result == null) result = caseConditionS(conditionDevice);
        if (result == null) result = caseStatementS(conditionDevice);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.MARK_VARIABLE:
      {
        MarkVariable markVariable = (MarkVariable)theEObject;
        T result = caseMarkVariable(markVariable);
        if (result == null) result = caseMarkS(markVariable);
        if (result == null) result = caseStatementS(markVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.MARK_VALUE:
      {
        MarkValue markValue = (MarkValue)theEObject;
        T result = caseMarkValue(markValue);
        if (result == null) result = caseMarkS(markValue);
        if (result == null) result = caseStatementS(markValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.LOCAL_VARIABLE:
      {
        LocalVariable localVariable = (LocalVariable)theEObject;
        T result = caseLocalVariable(localVariable);
        if (result == null) result = caseVariable(localVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.GLOBAL_VARIABLE:
      {
        GlobalVariable globalVariable = (GlobalVariable)theEObject;
        T result = caseGlobalVariable(globalVariable);
        if (result == null) result = caseVariable(globalVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DSL Long</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DSL Long</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDSL_Long(DSL_Long object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DSL Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DSL Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDSLType(DSLType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Configuration S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Configuration S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfigurationS(ConfigurationS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Device S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Device S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeviceS(DeviceS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Configuration Value S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Configuration Value S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfigurationValueS(ConfigurationValueS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Handling S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Handling S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskHandlingS(DiskHandlingS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Statement S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Statement S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStatementS(StatementS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseActionS(ActionS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConditionS(ConditionS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mark S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mark S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMarkS(MarkS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariable(Variable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseValue(Value object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DSL Short</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DSL Short</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDSLShort(DSLShort object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Crane</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Crane</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCrane(Crane object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Crane Zone</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Crane Zone</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCraneZone(CraneZone object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDisk(Disk object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Zone</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Zone</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskZone(DiskZone object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Camera</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Camera</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCamera(Camera object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Camera Color</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Camera Color</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCameraColor(CameraColor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Loop</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Loop</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLoop(Loop object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Move Disk</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Move Disk</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMoveDisk(MoveDisk object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Move Crane</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Move Crane</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMoveCrane(MoveCrane object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAction(Action object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConditionVariable(ConditionVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition Device</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition Device</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConditionDevice(ConditionDevice object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mark Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mark Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMarkVariable(MarkVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mark Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mark Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMarkValue(MarkValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Local Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Local Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocalVariable(LocalVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Global Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Global Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGlobalVariable(GlobalVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //ShortDSLSwitch
