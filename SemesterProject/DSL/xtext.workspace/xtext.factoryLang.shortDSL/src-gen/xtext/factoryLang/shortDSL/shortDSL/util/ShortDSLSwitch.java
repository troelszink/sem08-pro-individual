/**
 * generated by Xtext 2.25.0
 */
package xtext.factoryLang.shortDSL.shortDSL.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import xtext.factoryLang.shortDSL.shortDSL.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see xtext.factoryLang.shortDSL.shortDSL.ShortDSLPackage
 * @generated
 */
public class ShortDSLSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static ShortDSLPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ShortDSLSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = ShortDSLPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case ShortDSLPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DSL_PROGRAM:
      {
        DSLProgram dslProgram = (DSLProgram)theEObject;
        T result = caseDSLProgram(dslProgram);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CONFIGURATION_S:
      {
        ConfigurationS configurationS = (ConfigurationS)theEObject;
        T result = caseConfigurationS(configurationS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DEVICE_S:
      {
        DeviceS deviceS = (DeviceS)theEObject;
        T result = caseDeviceS(deviceS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CONFIGURATION_VALUE_S:
      {
        ConfigurationValueS configurationValueS = (ConfigurationValueS)theEObject;
        T result = caseConfigurationValueS(configurationValueS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.LOGGING_S:
      {
        LoggingS loggingS = (LoggingS)theEObject;
        T result = caseLoggingS(loggingS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DISK_HANDLING_S:
      {
        DiskHandlingS diskHandlingS = (DiskHandlingS)theEObject;
        T result = caseDiskHandlingS(diskHandlingS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.STATEMENT_S:
      {
        StatementS statementS = (StatementS)theEObject;
        T result = caseStatementS(statementS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.MOVE_S:
      {
        MoveS moveS = (MoveS)theEObject;
        T result = caseMoveS(moveS);
        if (result == null) result = caseStatementS(moveS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CRANE_ACTION_S:
      {
        CraneActionS craneActionS = (CraneActionS)theEObject;
        T result = caseCraneActionS(craneActionS);
        if (result == null) result = caseStatementS(craneActionS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CONDITION_S:
      {
        ConditionS conditionS = (ConditionS)theEObject;
        T result = caseConditionS(conditionS);
        if (result == null) result = caseStatementS(conditionS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.MARK_S:
      {
        MarkS markS = (MarkS)theEObject;
        T result = caseMarkS(markS);
        if (result == null) result = caseStatementS(markS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.VARIABLE_S:
      {
        VariableS variableS = (VariableS)theEObject;
        T result = caseVariableS(variableS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.VARIABLE_VALUE_S:
      {
        VariableValueS variableValueS = (VariableValueS)theEObject;
        T result = caseVariableValueS(variableValueS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DEVICE_VALUE_S:
      {
        DeviceValueS deviceValueS = (DeviceValueS)theEObject;
        T result = caseDeviceValueS(deviceValueS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.VALUE_SLOT_S:
      {
        ValueSlotS valueSlotS = (ValueSlotS)theEObject;
        T result = caseValueSlotS(valueSlotS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DSL_TYPE_VALUE:
      {
        DSLTypeValue dslTypeValue = (DSLTypeValue)theEObject;
        T result = caseDSLTypeValue(dslTypeValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DISK_STATE_VALUE_S:
      {
        DiskStateValueS diskStateValueS = (DiskStateValueS)theEObject;
        T result = caseDiskStateValueS(diskStateValueS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DISK_SLOT_STATE_VALUE_S:
      {
        DiskSlotStateValueS diskSlotStateValueS = (DiskSlotStateValueS)theEObject;
        T result = caseDiskSlotStateValueS(diskSlotStateValueS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.COLOR_VALUE_S:
      {
        ColorValueS colorValueS = (ColorValueS)theEObject;
        T result = caseColorValueS(colorValueS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.NUMBER_S:
      {
        NumberS numberS = (NumberS)theEObject;
        T result = caseNumberS(numberS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DSL_LONG:
      {
        DSLLong dslLong = (DSLLong)theEObject;
        T result = caseDSLLong(dslLong);
        if (result == null) result = caseDSLProgram(dslLong);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DSL_SHORT:
      {
        DSLShort dslShort = (DSLShort)theEObject;
        T result = caseDSLShort(dslShort);
        if (result == null) result = caseDSLProgram(dslShort);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CRANE:
      {
        Crane crane = (Crane)theEObject;
        T result = caseCrane(crane);
        if (result == null) result = caseDeviceS(crane);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CRANE_ZONE:
      {
        CraneZone craneZone = (CraneZone)theEObject;
        T result = caseCraneZone(craneZone);
        if (result == null) result = caseConfigurationValueS(craneZone);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DISK:
      {
        Disk disk = (Disk)theEObject;
        T result = caseDisk(disk);
        if (result == null) result = caseDeviceS(disk);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.DISK_ZONE:
      {
        DiskZone diskZone = (DiskZone)theEObject;
        T result = caseDiskZone(diskZone);
        if (result == null) result = caseConfigurationValueS(diskZone);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CAMERA:
      {
        Camera camera = (Camera)theEObject;
        T result = caseCamera(camera);
        if (result == null) result = caseDeviceS(camera);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CAMERA_COLOR:
      {
        CameraColor cameraColor = (CameraColor)theEObject;
        T result = caseCameraColor(cameraColor);
        if (result == null) result = caseConfigurationValueS(cameraColor);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.LOGGING:
      {
        Logging logging = (Logging)theEObject;
        T result = caseLogging(logging);
        if (result == null) result = caseLoggingS(logging);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.LOOP_VARIABLE:
      {
        LoopVariable loopVariable = (LoopVariable)theEObject;
        T result = caseLoopVariable(loopVariable);
        if (result == null) result = caseStatementS(loopVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.LOOP_SLOT:
      {
        LoopSlot loopSlot = (LoopSlot)theEObject;
        T result = caseLoopSlot(loopSlot);
        if (result == null) result = caseStatementS(loopSlot);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.MOVE_DISK:
      {
        MoveDisk moveDisk = (MoveDisk)theEObject;
        T result = caseMoveDisk(moveDisk);
        if (result == null) result = caseMoveS(moveDisk);
        if (result == null) result = caseStatementS(moveDisk);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.MOVE_ANY_SLOT:
      {
        MoveAnySlot moveAnySlot = (MoveAnySlot)theEObject;
        T result = caseMoveAnySlot(moveAnySlot);
        if (result == null) result = caseMoveS(moveAnySlot);
        if (result == null) result = caseStatementS(moveAnySlot);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.MOVE_CRANE:
      {
        MoveCrane moveCrane = (MoveCrane)theEObject;
        T result = caseMoveCrane(moveCrane);
        if (result == null) result = caseMoveS(moveCrane);
        if (result == null) result = caseStatementS(moveCrane);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CRANE_ACTION:
      {
        CraneAction craneAction = (CraneAction)theEObject;
        T result = caseCraneAction(craneAction);
        if (result == null) result = caseCraneActionS(craneAction);
        if (result == null) result = caseStatementS(craneAction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CONDITION_VARIABLE:
      {
        ConditionVariable conditionVariable = (ConditionVariable)theEObject;
        T result = caseConditionVariable(conditionVariable);
        if (result == null) result = caseConditionS(conditionVariable);
        if (result == null) result = caseStatementS(conditionVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CONDITION_SLOT:
      {
        ConditionSlot conditionSlot = (ConditionSlot)theEObject;
        T result = caseConditionSlot(conditionSlot);
        if (result == null) result = caseConditionS(conditionSlot);
        if (result == null) result = caseStatementS(conditionSlot);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.CONDITION_DEVICE:
      {
        ConditionDevice conditionDevice = (ConditionDevice)theEObject;
        T result = caseConditionDevice(conditionDevice);
        if (result == null) result = caseConditionS(conditionDevice);
        if (result == null) result = caseStatementS(conditionDevice);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.MARK_VARIABLE_VALUE:
      {
        MarkVariableValue markVariableValue = (MarkVariableValue)theEObject;
        T result = caseMarkVariableValue(markVariableValue);
        if (result == null) result = caseMarkS(markVariableValue);
        if (result == null) result = caseStatementS(markVariableValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.MARK_CAMERA_VALUE:
      {
        MarkCameraValue markCameraValue = (MarkCameraValue)theEObject;
        T result = caseMarkCameraValue(markCameraValue);
        if (result == null) result = caseMarkS(markCameraValue);
        if (result == null) result = caseStatementS(markCameraValue);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.ORDINARY_VARIABLE:
      {
        OrdinaryVariable ordinaryVariable = (OrdinaryVariable)theEObject;
        T result = caseOrdinaryVariable(ordinaryVariable);
        if (result == null) result = caseVariableS(ordinaryVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ShortDSLPackage.SLOT_VARIABLE:
      {
        SlotVariable slotVariable = (SlotVariable)theEObject;
        T result = caseSlotVariable(slotVariable);
        if (result == null) result = caseVariableS(slotVariable);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DSL Program</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DSL Program</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDSLProgram(DSLProgram object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Configuration S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Configuration S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfigurationS(ConfigurationS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Device S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Device S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeviceS(DeviceS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Configuration Value S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Configuration Value S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConfigurationValueS(ConfigurationValueS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Logging S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Logging S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLoggingS(LoggingS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Handling S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Handling S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskHandlingS(DiskHandlingS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Statement S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Statement S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStatementS(StatementS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Move S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Move S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMoveS(MoveS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Crane Action S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Crane Action S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCraneActionS(CraneActionS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConditionS(ConditionS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mark S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mark S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMarkS(MarkS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variable S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variable S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariableS(VariableS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Variable Value S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Variable Value S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseVariableValueS(VariableValueS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Device Value S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Device Value S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeviceValueS(DeviceValueS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Value Slot S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Value Slot S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseValueSlotS(ValueSlotS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DSL Type Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DSL Type Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDSLTypeValue(DSLTypeValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk State Value S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk State Value S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskStateValueS(DiskStateValueS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Slot State Value S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Slot State Value S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskSlotStateValueS(DiskSlotStateValueS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Color Value S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Color Value S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseColorValueS(ColorValueS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Number S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Number S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNumberS(NumberS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DSL Long</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DSL Long</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDSLLong(DSLLong object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>DSL Short</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>DSL Short</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDSLShort(DSLShort object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Crane</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Crane</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCrane(Crane object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Crane Zone</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Crane Zone</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCraneZone(CraneZone object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDisk(Disk object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Disk Zone</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Disk Zone</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDiskZone(DiskZone object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Camera</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Camera</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCamera(Camera object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Camera Color</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Camera Color</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCameraColor(CameraColor object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Logging</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Logging</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLogging(Logging object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Loop Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Loop Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLoopVariable(LoopVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Loop Slot</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Loop Slot</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLoopSlot(LoopSlot object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Move Disk</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Move Disk</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMoveDisk(MoveDisk object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Move Any Slot</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Move Any Slot</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMoveAnySlot(MoveAnySlot object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Move Crane</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Move Crane</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMoveCrane(MoveCrane object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Crane Action</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Crane Action</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCraneAction(CraneAction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConditionVariable(ConditionVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition Slot</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition Slot</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConditionSlot(ConditionSlot object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Condition Device</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Condition Device</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConditionDevice(ConditionDevice object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mark Variable Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mark Variable Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMarkVariableValue(MarkVariableValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Mark Camera Value</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Mark Camera Value</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseMarkCameraValue(MarkCameraValue object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Ordinary Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Ordinary Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOrdinaryVariable(OrdinaryVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Slot Variable</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Slot Variable</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSlotVariable(SlotVariable object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //ShortDSLSwitch
