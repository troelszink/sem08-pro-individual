/**
 * generated by Xtext 2.25.0
 */
package xtext.factoryLang.shortDSL.shortDSL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import xtext.factoryLang.shortDSL.shortDSL.ActionS;
import xtext.factoryLang.shortDSL.shortDSL.Crane;
import xtext.factoryLang.shortDSL.shortDSL.CraneZone;
import xtext.factoryLang.shortDSL.shortDSL.MoveCrane;
import xtext.factoryLang.shortDSL.shortDSL.ShortDSLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Move Crane</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.factoryLang.shortDSL.shortDSL.impl.MoveCraneImpl#getCrane <em>Crane</em>}</li>
 *   <li>{@link xtext.factoryLang.shortDSL.shortDSL.impl.MoveCraneImpl#getAction <em>Action</em>}</li>
 *   <li>{@link xtext.factoryLang.shortDSL.shortDSL.impl.MoveCraneImpl#getZone <em>Zone</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MoveCraneImpl extends StatementSImpl implements MoveCrane
{
  /**
   * The cached value of the '{@link #getCrane() <em>Crane</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCrane()
   * @generated
   * @ordered
   */
  protected Crane crane;

  /**
   * The cached value of the '{@link #getAction() <em>Action</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAction()
   * @generated
   * @ordered
   */
  protected ActionS action;

  /**
   * The cached value of the '{@link #getZone() <em>Zone</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getZone()
   * @generated
   * @ordered
   */
  protected CraneZone zone;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MoveCraneImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ShortDSLPackage.Literals.MOVE_CRANE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Crane getCrane()
  {
    if (crane != null && crane.eIsProxy())
    {
      InternalEObject oldCrane = (InternalEObject)crane;
      crane = (Crane)eResolveProxy(oldCrane);
      if (crane != oldCrane)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ShortDSLPackage.MOVE_CRANE__CRANE, oldCrane, crane));
      }
    }
    return crane;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Crane basicGetCrane()
  {
    return crane;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCrane(Crane newCrane)
  {
    Crane oldCrane = crane;
    crane = newCrane;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShortDSLPackage.MOVE_CRANE__CRANE, oldCrane, crane));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ActionS getAction()
  {
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAction(ActionS newAction, NotificationChain msgs)
  {
    ActionS oldAction = action;
    action = newAction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ShortDSLPackage.MOVE_CRANE__ACTION, oldAction, newAction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAction(ActionS newAction)
  {
    if (newAction != action)
    {
      NotificationChain msgs = null;
      if (action != null)
        msgs = ((InternalEObject)action).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ShortDSLPackage.MOVE_CRANE__ACTION, null, msgs);
      if (newAction != null)
        msgs = ((InternalEObject)newAction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ShortDSLPackage.MOVE_CRANE__ACTION, null, msgs);
      msgs = basicSetAction(newAction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShortDSLPackage.MOVE_CRANE__ACTION, newAction, newAction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CraneZone getZone()
  {
    if (zone != null && zone.eIsProxy())
    {
      InternalEObject oldZone = (InternalEObject)zone;
      zone = (CraneZone)eResolveProxy(oldZone);
      if (zone != oldZone)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, ShortDSLPackage.MOVE_CRANE__ZONE, oldZone, zone));
      }
    }
    return zone;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CraneZone basicGetZone()
  {
    return zone;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setZone(CraneZone newZone)
  {
    CraneZone oldZone = zone;
    zone = newZone;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShortDSLPackage.MOVE_CRANE__ZONE, oldZone, zone));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ShortDSLPackage.MOVE_CRANE__ACTION:
        return basicSetAction(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ShortDSLPackage.MOVE_CRANE__CRANE:
        if (resolve) return getCrane();
        return basicGetCrane();
      case ShortDSLPackage.MOVE_CRANE__ACTION:
        return getAction();
      case ShortDSLPackage.MOVE_CRANE__ZONE:
        if (resolve) return getZone();
        return basicGetZone();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ShortDSLPackage.MOVE_CRANE__CRANE:
        setCrane((Crane)newValue);
        return;
      case ShortDSLPackage.MOVE_CRANE__ACTION:
        setAction((ActionS)newValue);
        return;
      case ShortDSLPackage.MOVE_CRANE__ZONE:
        setZone((CraneZone)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ShortDSLPackage.MOVE_CRANE__CRANE:
        setCrane((Crane)null);
        return;
      case ShortDSLPackage.MOVE_CRANE__ACTION:
        setAction((ActionS)null);
        return;
      case ShortDSLPackage.MOVE_CRANE__ZONE:
        setZone((CraneZone)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ShortDSLPackage.MOVE_CRANE__CRANE:
        return crane != null;
      case ShortDSLPackage.MOVE_CRANE__ACTION:
        return action != null;
      case ShortDSLPackage.MOVE_CRANE__ZONE:
        return zone != null;
    }
    return super.eIsSet(featureID);
  }

} //MoveCraneImpl
