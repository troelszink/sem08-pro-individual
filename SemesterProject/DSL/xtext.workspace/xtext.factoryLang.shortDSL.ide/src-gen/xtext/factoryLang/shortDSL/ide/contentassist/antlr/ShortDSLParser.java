/*
 * generated by Xtext 2.25.0
 */
package xtext.factoryLang.shortDSL.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.TokenSource;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import xtext.factoryLang.shortDSL.ide.contentassist.antlr.internal.InternalShortDSLParser;
import xtext.factoryLang.shortDSL.services.ShortDSLGrammarAccess;

public class ShortDSLParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(ShortDSLGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, ShortDSLGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getDSLProgramAccess().getAlternatives(), "rule__DSLProgram__Alternatives");
			builder.put(grammarAccess.getDeviceSAccess().getAlternatives(), "rule__DeviceS__Alternatives");
			builder.put(grammarAccess.getStatementSAccess().getAlternatives(), "rule__StatementS__Alternatives");
			builder.put(grammarAccess.getLoopSAccess().getAlternatives(), "rule__LoopS__Alternatives");
			builder.put(grammarAccess.getMoveSAccess().getAlternatives(), "rule__MoveS__Alternatives");
			builder.put(grammarAccess.getMoveDiskSAccess().getAlternatives_2(), "rule__MoveDiskS__Alternatives_2");
			builder.put(grammarAccess.getMoveAnySlotSAccess().getAlternatives_3(), "rule__MoveAnySlotS__Alternatives_3");
			builder.put(grammarAccess.getMoveCraneSAccess().getAlternatives_3(), "rule__MoveCraneS__Alternatives_3");
			builder.put(grammarAccess.getCraneActionSAccess().getAlternatives_1(), "rule__CraneActionS__Alternatives_1");
			builder.put(grammarAccess.getConditionSAccess().getAlternatives(), "rule__ConditionS__Alternatives");
			builder.put(grammarAccess.getMarkSAccess().getAlternatives(), "rule__MarkS__Alternatives");
			builder.put(grammarAccess.getVariableSAccess().getAlternatives(), "rule__VariableS__Alternatives");
			builder.put(grammarAccess.getVariableValueSAccess().getAlternatives(), "rule__VariableValueS__Alternatives");
			builder.put(grammarAccess.getDeviceValueSAccess().getAlternatives(), "rule__DeviceValueS__Alternatives");
			builder.put(grammarAccess.getValueSlotSAccess().getAlternatives(), "rule__ValueSlotS__Alternatives");
			builder.put(grammarAccess.getDSL_TYPE_ENUMAccess().getAlternatives(), "rule__DSL_TYPE_ENUM__Alternatives");
			builder.put(grammarAccess.getCOMPARISON_OPERATOR_SAccess().getAlternatives(), "rule__COMPARISON_OPERATOR_S__Alternatives");
			builder.put(grammarAccess.getCOLOR_SAccess().getAlternatives(), "rule__COLOR_S__Alternatives");
			builder.put(grammarAccess.getDISK_SLOT_STATES_SAccess().getAlternatives(), "rule__DISK_SLOT_STATES_S__Alternatives");
			builder.put(grammarAccess.getDISK_STATES_SAccess().getAlternatives(), "rule__DISK_STATES_S__Alternatives");
			builder.put(grammarAccess.getTIME_UNIT_SAccess().getAlternatives(), "rule__TIME_UNIT_S__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getDSLLongAccess().getGroup(), "rule__DSLLong__Group__0");
			builder.put(grammarAccess.getDSLShortAccess().getGroup(), "rule__DSLShort__Group__0");
			builder.put(grammarAccess.getConfigurationSAccess().getGroup(), "rule__ConfigurationS__Group__0");
			builder.put(grammarAccess.getCraneSAccess().getGroup(), "rule__CraneS__Group__0");
			builder.put(grammarAccess.getCraneZoneSAccess().getGroup(), "rule__CraneZoneS__Group__0");
			builder.put(grammarAccess.getDiskSAccess().getGroup(), "rule__DiskS__Group__0");
			builder.put(grammarAccess.getDiskZoneSAccess().getGroup(), "rule__DiskZoneS__Group__0");
			builder.put(grammarAccess.getCameraSAccess().getGroup(), "rule__CameraS__Group__0");
			builder.put(grammarAccess.getCameraColorSAccess().getGroup(), "rule__CameraColorS__Group__0");
			builder.put(grammarAccess.getLoggingSAccess().getGroup(), "rule__LoggingS__Group__0");
			builder.put(grammarAccess.getDiskHandlingSAccess().getGroup(), "rule__DiskHandlingS__Group__0");
			builder.put(grammarAccess.getLoopVariableSAccess().getGroup(), "rule__LoopVariableS__Group__0");
			builder.put(grammarAccess.getLoopSlotSAccess().getGroup(), "rule__LoopSlotS__Group__0");
			builder.put(grammarAccess.getMoveDiskSAccess().getGroup(), "rule__MoveDiskS__Group__0");
			builder.put(grammarAccess.getMoveAnySlotSAccess().getGroup(), "rule__MoveAnySlotS__Group__0");
			builder.put(grammarAccess.getMoveCraneSAccess().getGroup(), "rule__MoveCraneS__Group__0");
			builder.put(grammarAccess.getCraneActionSAccess().getGroup(), "rule__CraneActionS__Group__0");
			builder.put(grammarAccess.getConditionVariableSAccess().getGroup(), "rule__ConditionVariableS__Group__0");
			builder.put(grammarAccess.getConditionSlotSAccess().getGroup(), "rule__ConditionSlotS__Group__0");
			builder.put(grammarAccess.getConditionDeviceSAccess().getGroup(), "rule__ConditionDeviceS__Group__0");
			builder.put(grammarAccess.getMarkVariableValueSAccess().getGroup(), "rule__MarkVariableValueS__Group__0");
			builder.put(grammarAccess.getMarkVariableValueSAccess().getGroup_4(), "rule__MarkVariableValueS__Group_4__0");
			builder.put(grammarAccess.getMarkCameraValueSAccess().getGroup(), "rule__MarkCameraValueS__Group__0");
			builder.put(grammarAccess.getOrdinaryVariableSAccess().getGroup(), "rule__OrdinaryVariableS__Group__0");
			builder.put(grammarAccess.getSlotVariableSAccess().getGroup(), "rule__SlotVariableS__Group__0");
			builder.put(grammarAccess.getModelAccess().getDslTypeAssignment_1(), "rule__Model__DslTypeAssignment_1");
			builder.put(grammarAccess.getModelAccess().getDslProgramAssignment_3(), "rule__Model__DslProgramAssignment_3");
			builder.put(grammarAccess.getDSLLongAccess().getNameAssignment_2(), "rule__DSLLong__NameAssignment_2");
			builder.put(grammarAccess.getDSLShortAccess().getConfigurationAssignment_1(), "rule__DSLShort__ConfigurationAssignment_1");
			builder.put(grammarAccess.getDSLShortAccess().getDiskHandlingsAssignment_2(), "rule__DSLShort__DiskHandlingsAssignment_2");
			builder.put(grammarAccess.getConfigurationSAccess().getDevicesAssignment_3(), "rule__ConfigurationS__DevicesAssignment_3");
			builder.put(grammarAccess.getCraneSAccess().getNameAssignment_1(), "rule__CraneS__NameAssignment_1");
			builder.put(grammarAccess.getCraneSAccess().getLoggingAssignment_2(), "rule__CraneS__LoggingAssignment_2");
			builder.put(grammarAccess.getCraneSAccess().getTargetsAssignment_5(), "rule__CraneS__TargetsAssignment_5");
			builder.put(grammarAccess.getCraneZoneSAccess().getNameAssignment_1(), "rule__CraneZoneS__NameAssignment_1");
			builder.put(grammarAccess.getCraneZoneSAccess().getZoneValueAssignment_3(), "rule__CraneZoneS__ZoneValueAssignment_3");
			builder.put(grammarAccess.getDiskSAccess().getNameAssignment_1(), "rule__DiskS__NameAssignment_1");
			builder.put(grammarAccess.getDiskSAccess().getNSlotsAssignment_3(), "rule__DiskS__NSlotsAssignment_3");
			builder.put(grammarAccess.getDiskSAccess().getLoggingAssignment_5(), "rule__DiskS__LoggingAssignment_5");
			builder.put(grammarAccess.getDiskSAccess().getTargetsAssignment_8(), "rule__DiskS__TargetsAssignment_8");
			builder.put(grammarAccess.getDiskZoneSAccess().getNameAssignment_1(), "rule__DiskZoneS__NameAssignment_1");
			builder.put(grammarAccess.getDiskZoneSAccess().getSlotAssignment_3(), "rule__DiskZoneS__SlotAssignment_3");
			builder.put(grammarAccess.getCameraSAccess().getNameAssignment_1(), "rule__CameraS__NameAssignment_1");
			builder.put(grammarAccess.getCameraSAccess().getLoggingAssignment_2(), "rule__CameraS__LoggingAssignment_2");
			builder.put(grammarAccess.getCameraSAccess().getTargetsAssignment_5(), "rule__CameraS__TargetsAssignment_5");
			builder.put(grammarAccess.getCameraColorSAccess().getColorAssignment_1(), "rule__CameraColorS__ColorAssignment_1");
			builder.put(grammarAccess.getDiskHandlingSAccess().getDiskAssignment_1(), "rule__DiskHandlingS__DiskAssignment_1");
			builder.put(grammarAccess.getDiskHandlingSAccess().getStatementsAssignment_4(), "rule__DiskHandlingS__StatementsAssignment_4");
			builder.put(grammarAccess.getLoopVariableSAccess().getOrdinaryVariableAssignment_3(), "rule__LoopVariableS__OrdinaryVariableAssignment_3");
			builder.put(grammarAccess.getLoopVariableSAccess().getComparisonOperatorAssignment_4(), "rule__LoopVariableS__ComparisonOperatorAssignment_4");
			builder.put(grammarAccess.getLoopVariableSAccess().getSlotStateAssignment_5(), "rule__LoopVariableS__SlotStateAssignment_5");
			builder.put(grammarAccess.getLoopVariableSAccess().getStatementsAssignment_8(), "rule__LoopVariableS__StatementsAssignment_8");
			builder.put(grammarAccess.getLoopSlotSAccess().getSlotVariableAssignment_3(), "rule__LoopSlotS__SlotVariableAssignment_3");
			builder.put(grammarAccess.getLoopSlotSAccess().getComparisonOperatorAssignment_4(), "rule__LoopSlotS__ComparisonOperatorAssignment_4");
			builder.put(grammarAccess.getLoopSlotSAccess().getSlotStateAssignment_5(), "rule__LoopSlotS__SlotStateAssignment_5");
			builder.put(grammarAccess.getLoopSlotSAccess().getStatementsAssignment_8(), "rule__LoopSlotS__StatementsAssignment_8");
			builder.put(grammarAccess.getMoveDiskSAccess().getSlotAssignment_1(), "rule__MoveDiskS__SlotAssignment_1");
			builder.put(grammarAccess.getMoveDiskSAccess().getZoneAssignment_3(), "rule__MoveDiskS__ZoneAssignment_3");
			builder.put(grammarAccess.getMoveAnySlotSAccess().getStateAssignment_1(), "rule__MoveAnySlotS__StateAssignment_1");
			builder.put(grammarAccess.getMoveAnySlotSAccess().getAnySlotAssignment_2(), "rule__MoveAnySlotS__AnySlotAssignment_2");
			builder.put(grammarAccess.getMoveAnySlotSAccess().getZoneAssignment_4(), "rule__MoveAnySlotS__ZoneAssignment_4");
			builder.put(grammarAccess.getMoveCraneSAccess().getCraneAssignment_1(), "rule__MoveCraneS__CraneAssignment_1");
			builder.put(grammarAccess.getMoveCraneSAccess().getActionAssignment_2(), "rule__MoveCraneS__ActionAssignment_2");
			builder.put(grammarAccess.getMoveCraneSAccess().getZoneAssignment_4(), "rule__MoveCraneS__ZoneAssignment_4");
			builder.put(grammarAccess.getConditionVariableSAccess().getVariableAssignment_3(), "rule__ConditionVariableS__VariableAssignment_3");
			builder.put(grammarAccess.getConditionVariableSAccess().getComparisonOperatorAssignment_4(), "rule__ConditionVariableS__ComparisonOperatorAssignment_4");
			builder.put(grammarAccess.getConditionVariableSAccess().getVariableValueAssignment_5(), "rule__ConditionVariableS__VariableValueAssignment_5");
			builder.put(grammarAccess.getConditionVariableSAccess().getStatementsAssignment_8(), "rule__ConditionVariableS__StatementsAssignment_8");
			builder.put(grammarAccess.getConditionSlotSAccess().getVariableAssignment_3(), "rule__ConditionSlotS__VariableAssignment_3");
			builder.put(grammarAccess.getConditionSlotSAccess().getComparisonOperatorAssignment_4(), "rule__ConditionSlotS__ComparisonOperatorAssignment_4");
			builder.put(grammarAccess.getConditionSlotSAccess().getSlotValueAssignment_5(), "rule__ConditionSlotS__SlotValueAssignment_5");
			builder.put(grammarAccess.getConditionSlotSAccess().getStatementsAssignment_8(), "rule__ConditionSlotS__StatementsAssignment_8");
			builder.put(grammarAccess.getConditionDeviceSAccess().getDeviceAssignment_3(), "rule__ConditionDeviceS__DeviceAssignment_3");
			builder.put(grammarAccess.getConditionDeviceSAccess().getComparisonOperatorAssignment_4(), "rule__ConditionDeviceS__ComparisonOperatorAssignment_4");
			builder.put(grammarAccess.getConditionDeviceSAccess().getDeviceValueAssignment_5(), "rule__ConditionDeviceS__DeviceValueAssignment_5");
			builder.put(grammarAccess.getConditionDeviceSAccess().getStatementsAssignment_8(), "rule__ConditionDeviceS__StatementsAssignment_8");
			builder.put(grammarAccess.getMarkVariableValueSAccess().getVariableAssignment_1(), "rule__MarkVariableValueS__VariableAssignment_1");
			builder.put(grammarAccess.getMarkVariableValueSAccess().getValueAssignment_3(), "rule__MarkVariableValueS__ValueAssignment_3");
			builder.put(grammarAccess.getMarkVariableValueSAccess().getTimeAssignment_4_1(), "rule__MarkVariableValueS__TimeAssignment_4_1");
			builder.put(grammarAccess.getMarkVariableValueSAccess().getUnitAssignment_4_2(), "rule__MarkVariableValueS__UnitAssignment_4_2");
			builder.put(grammarAccess.getMarkCameraValueSAccess().getCameraAssignment_1(), "rule__MarkCameraValueS__CameraAssignment_1");
			builder.put(grammarAccess.getMarkCameraValueSAccess().getVariableAssignment_3(), "rule__MarkCameraValueS__VariableAssignment_3");
			builder.put(grammarAccess.getOrdinaryVariableSAccess().getNameAssignment_1(), "rule__OrdinaryVariableS__NameAssignment_1");
			builder.put(grammarAccess.getSlotVariableSAccess().getNameAssignment_1(), "rule__SlotVariableS__NameAssignment_1");
			builder.put(grammarAccess.getVariableValueSAccess().getValueAssignment_0(), "rule__VariableValueS__ValueAssignment_0");
			builder.put(grammarAccess.getVariableValueSAccess().getValueAssignment_1(), "rule__VariableValueS__ValueAssignment_1");
			builder.put(grammarAccess.getVariableValueSAccess().getValueAssignment_2(), "rule__VariableValueS__ValueAssignment_2");
			builder.put(grammarAccess.getVariableValueSAccess().getValueAssignment_3(), "rule__VariableValueS__ValueAssignment_3");
			builder.put(grammarAccess.getVariableValueSAccess().getRefAssignment_4(), "rule__VariableValueS__RefAssignment_4");
			builder.put(grammarAccess.getDeviceValueSAccess().getValueAssignment_0(), "rule__DeviceValueS__ValueAssignment_0");
			builder.put(grammarAccess.getDeviceValueSAccess().getValueAssignment_1(), "rule__DeviceValueS__ValueAssignment_1");
			builder.put(grammarAccess.getDeviceValueSAccess().getConfigurationValueAssignment_2(), "rule__DeviceValueS__ConfigurationValueAssignment_2");
			builder.put(grammarAccess.getValueSlotSAccess().getValueAssignment_0(), "rule__ValueSlotS__ValueAssignment_0");
			builder.put(grammarAccess.getValueSlotSAccess().getValueAssignment_1(), "rule__ValueSlotS__ValueAssignment_1");
			builder.put(grammarAccess.getDSLTypeValueAccess().getValueAssignment(), "rule__DSLTypeValue__ValueAssignment");
			builder.put(grammarAccess.getDiskStateValueSAccess().getValueAssignment(), "rule__DiskStateValueS__ValueAssignment");
			builder.put(grammarAccess.getDiskSlotStateValueSAccess().getValueAssignment(), "rule__DiskSlotStateValueS__ValueAssignment");
			builder.put(grammarAccess.getColorValueSAccess().getValueAssignment(), "rule__ColorValueS__ValueAssignment");
			builder.put(grammarAccess.getNumberSAccess().getValueAssignment(), "rule__NumberS__ValueAssignment");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private ShortDSLGrammarAccess grammarAccess;

	@Override
	protected InternalShortDSLParser createParser() {
		InternalShortDSLParser result = new InternalShortDSLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected TokenSource createLexer(CharStream stream) {
		return new ShortDSLTokenSource(super.createLexer(stream));
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ShortDSLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ShortDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
